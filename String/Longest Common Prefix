class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs==null || strs.length==0){
            return "";
        }
        Arrays.sort(strs);
        String first = strs[0];
        String last = strs[strs.length-1];

        int i=0;
        while(i<first.length() && i<last.length() && first.charAt(i)==last.charAt(i)){
            i++;
        }
        return first.substring(0,i);
    }
}
ðŸ•’ Time Complexity
	â€¢	Sorting: O(n log n) (where n = number of strings)
	â€¢	Comparing first and last: O(m) (where m = length of smallest string)

So total = O(n log n + m)

ðŸ’¾ Space Complexity
	â€¢	O(1) (ignoring sortingâ€™s internal space)
